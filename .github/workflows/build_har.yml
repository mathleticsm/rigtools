name: Build and Release HAR

on:
  push:
    branches:
      - main
    paths:
      - '**/*.js'
      - 'entry/entry.html'
      - 'payloads/**'
      - 'autoxss.js'
      -  '.github/workflows/build_har.yml'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run HAR Build
        run: npm run har-build

      - name: Rename HAR to unique filename
        id: get-har
        run: |
          HAR_FILE=$(ls *.har | sort | tail -n 1)
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          NEW_NAME="hartools-${TIMESTAMP}.har"
          mv "$HAR_FILE" "$NEW_NAME"
          echo "har_file=$NEW_NAME" >> $GITHUB_OUTPUT

      - name: Generate tag name
        id: generate-tag
        run: |
          TAG_NAME="$(date +'%_m|%-d|%y' | tr -d ' ')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.generate-tag.outputs.tag_name }}
          name: Hartools - ${{ steps.generate-tag.outputs.tag_name }}
          files: ${{ steps.get-har.outputs.har_file }}
          body: |
            # Instructions:

            1. **Download the latest '.har' file** attached.
            2. **Get the `.har` file** onto the device you want to run the DevTools XSS on.
            3. On the target device, go to:  
               `devtools://devtools/bundled/inspector.html`  
               > If blocked, try one of the following:  
               > - `devtools://devtools/bundled/js_app.html`  
               > - `devtools://devtools/bundled/devtools_app.html`  
               > - `devtools://devtools/bundled/worker_app.html`  
            4. Once fully loaded, append `?experiments=true` to the URL and press Enter.  
               Example: `devtools://devtools/bundled/inspector.html?experiments=true`
            5. Go to the **Network** tab. If itâ€™s not visible, click `>>` on the topbar and select **Network**.
            6. Click the upload icon ðŸ“¤ and upload the `.har` file.  
               > You may need to expand the sidebar to see the upload button.
            7. **Double-click** the text that appears â€” `[DOUBLE CLICK THIS]` â€” to trigger the payload.
            note: the timestamp below is stored in gmt time.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
